* * * * * * * SÃ­mbolos * * * * * * *
0 - gcd
1 - u
2 - v
3 - 0
4 - main
5 - x
6 - y
7 - input
8 - output
* * * * * * * Lexemes * * * * * * *
0 - 0:0 - l: "/* Um programa para calcular o mdc
    segundo o algoritmo de Euclides. */", t: com, a: COM
1 - 3:0 - l: "int", t: int, a: 
2 - 3:0 - l: "gcd", t: id, a: [0]
3 - 3:0 - l: "(", t: scope, a: ARGOPEN
4 - 3:0 - l: "int", t: int, a: 
5 - 3:0 - l: "u", t: id, a: [1]
6 - 3:0 - l: ",", t: sep, a: 
7 - 3:0 - l: "int", t: int, a: 
8 - 3:0 - l: "v", t: id, a: [2]
9 - 3:0 - l: ")", t: scope, a: ARGCLOSE
10 - 4:0 - l: "{", t: scope, a: SCOPEOPEN
11 - 4:0 - l: "if", t: if, a: 
12 - 4:0 - l: "(", t: scope, a: ARGOPEN
13 - 4:0 - l: "v", t: id, a: [2]
14 - 4:0 - l: "==", t: relop, a: EQ
15 - 4:0 - l: "0", t: num, a: [3]
16 - 4:0 - l: ")", t: scope, a: ARGCLOSE
17 - 4:0 - l: "return", t: return, a: 
18 - 4:0 - l: "u", t: id, a: [1]
19 - 4:0 - l: ";", t: end, a: 
20 - 5:0 - l: "else", t: else, a: 
21 - 5:0 - l: "return", t: return, a: 
22 - 5:0 - l: "gcd", t: id, a: [0]
23 - 5:0 - l: "(", t: scope, a: ARGOPEN
24 - 5:0 - l: "v", t: id, a: [2]
25 - 5:0 - l: ",", t: sep, a: 
26 - 5:0 - l: "u", t: id, a: [1]
27 - 5:0 - l: "-", t: soma, a: SUB
28 - 5:0 - l: "u", t: id, a: [1]
29 - 5:0 - l: "/", t: mul, a: DIV
30 - 5:0 - l: "v", t: id, a: [2]
31 - 5:0 - l: "*", t: mul, a: MUL
32 - 5:0 - l: "v", t: id, a: [2]
33 - 5:0 - l: ")", t: scope, a: ARGCLOSE
34 - 5:0 - l: ";", t: end, a: 
35 - 6:0 - l: "/* u -u/v*v == u mod v */", t: com, a: COM
36 - 8:0 - l: "void", t: void, a: 
37 - 8:0 - l: "main", t: id, a: [4]
38 - 8:0 - l: "(", t: scope, a: ARGOPEN
39 - 8:0 - l: "void", t: void, a: 
40 - 8:0 - l: ")", t: scope, a: ARGCLOSE
41 - 9:0 - l: "{", t: scope, a: SCOPEOPEN
42 - 9:0 - l: "int", t: int, a: 
43 - 9:0 - l: "x", t: id, a: [5]
44 - 9:0 - l: ";", t: end, a: 
45 - 9:0 - l: "int", t: int, a: 
46 - 9:0 - l: "y", t: id, a: [6]
47 - 9:0 - l: ";", t: end, a: 
48 - 10:0 - l: "x", t: id, a: [5]
49 - 10:0 - l: "=", t: att, a: 
50 - 10:0 - l: "input", t: id, a: [7]
51 - 10:0 - l: "(", t: scope, a: ARGOPEN
52 - 10:0 - l: ")", t: scope, a: ARGCLOSE
53 - 10:0 - l: ";", t: end, a: 
54 - 10:0 - l: "y", t: id, a: [6]
55 - 10:0 - l: "=", t: att, a: 
56 - 10:0 - l: "input", t: id, a: [7]
57 - 10:0 - l: "(", t: scope, a: ARGOPEN
58 - 10:0 - l: ")", t: scope, a: ARGCLOSE
59 - 10:0 - l: ";", t: end, a: 
60 - 11:0 - l: "output", t: id, a: [8]
61 - 11:0 - l: "(", t: scope, a: ARGOPEN
62 - 11:0 - l: "gcd", t: id, a: [0]
63 - 11:0 - l: "(", t: scope, a: ARGOPEN
64 - 11:0 - l: "x", t: id, a: [5]
65 - 11:0 - l: ",", t: sep, a: 
66 - 11:0 - l: "y", t: id, a: [6]
67 - 11:0 - l: ")", t: scope, a: ARGCLOSE
68 - 11:0 - l: ")", t: scope, a: ARGCLOSE
69 - 11:0 - l: ";", t: end, a: 
70 - 12:0 - l: "}", t: scope, a: SCOPECLOSE